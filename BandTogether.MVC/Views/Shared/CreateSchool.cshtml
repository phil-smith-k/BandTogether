@using BandTogether.Models.SchoolModels;
@model BandTogether.Models.SchoolModels.SchoolCreate


@{
    ViewBag.Title = "CreateSchool";
}


@using (Ajax.BeginForm("AddSchool","School", new AjaxOptions { OnSuccess = "onChangeSuccess"}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.TeacherId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })


        <div class="form-group">
            @*@Html.LabelFor(model => model.SchoolName, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.SchoolName, new { htmlAttributes = new { @class = "form-control", placeholder="School Name" } })
                @Html.ValidationMessageFor(model => model.SchoolName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control", placeholder="Street Address" } })
                @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2"})*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder="City" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, StateList.States, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control", placeholder="ZIP Code" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LowestGradeLevel, htmlAttributes: new { @class = "control-label ml-5 font-weight-bold" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.LowestGradeLevel, Enumerable.Range(1, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LowestGradeLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HighestGradeLevel, htmlAttributes: new { @class = "control-label ml-5 font-weight-bold" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.HighestGradeLevel, Enumerable.Range(1, 12).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HighestGradeLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="float-right">
                <input type="submit" value="Save" class="btn follow-btn" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
function onChangeSuccess(data) {

    if (data.status === "success") {
        $("#modalcontent").modal('hide');
        $("#message-area").html(data.view);
    }
    $.each(data.formErrors, function() {
        $("[data-valmsg-for=" + this.key + "]").html(this.errors.join());
    });
}
</script>
}
