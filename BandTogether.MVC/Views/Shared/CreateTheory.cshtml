@model BandTogether.Models.ResourceModels.TheoryResourceModels.TheoryCreate

@{
    ViewBag.Title = "CreateTheory";
}
@using (Html.BeginForm("CreateTheory", "Resource", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", placeholder = "Description" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="">
                @Html.EnumDropDownListFor(model => model.Topic, "-- Select A Topic", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GradeLevel, htmlAttributes: new { @class = "control-label ml-5" })
            <div class="">
                @Html.DropDownListFor(m => m.GradeLevel, Enumerable.Range(4, 9).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GradeLevel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ml-5">
            <div class="custom-control custom-checkbox">
                @Html.EditorFor(model => model.TheoryIsDownloadable, new { htmlAttributes = new { @class = "custom-control-input ml-2" } })
                @Html.LabelFor(model => model.TheoryIsDownloadable, htmlAttributes: new { @class = "custom-control-label" })
                @Html.ValidationMessageFor(model => model.TheoryIsDownloadable, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group ml-5">
            <div class="custom-control custom-checkbox">
                @Html.EditorFor(model => model.TheoryIsPublic, new { htmlAttributes = new { @class = "custom-control-input" } })
                @Html.LabelFor(model => model.TheoryIsPublic, htmlAttributes: new { @class = "custom-control-label" })
                @Html.ValidationMessageFor(model => model.TheoryIsPublic, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="d-flex justify-content-around">
                <label for="TheoryFile" class="btn unfollow-btn mt-3 ml-4 mb-3">
                    Browse
                </label>
                <div class="border mt-3 ml-4 mb-3 pl-3 pt-1" id="file-name-text">
                    Your File
                </div>
                <input type="file" id="TheoryFile" name="File" value="File" />
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="">
                <input type="submit" value="Upload" class="btn follow-btn float-right" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

