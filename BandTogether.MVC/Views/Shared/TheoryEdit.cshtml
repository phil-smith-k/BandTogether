@model BandTogether.Models.ResourceModels.TheoryResourceModels.TheoryEdit

<button type="button" class="btn update-btn" data-toggle="modal" data-target="#update-technique">Update</button>
<div class="modal fade" id="update-technique" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6>Update @Html.DisplayFor(model => model.Title)</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("EditTheory", "Resource", new { id = Model.TeacherId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ResourceId)
                    @Html.HiddenFor(model => model.TeacherId)
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="">
                                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", placeholder = "Description" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="">
                                @Html.EnumDropDownListFor(model => model.Topic, "-- Select An Instrument", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.GradeLevel, htmlAttributes: new { @class = "control-label ml-5" })
                            <div class="">
                                @Html.DropDownListFor(m => m.GradeLevel, Enumerable.Range(4, 9).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.GradeLevel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group ml-5">
                            <div class="custom-control custom-checkbox">
                                @Html.EditorFor(model => model.IsDownloadable, new { htmlAttributes = new { @class = "custom-control-input ml-2" } })
                                @Html.LabelFor(model => model.IsDownloadable, htmlAttributes: new { @class = "custom-control-label" })
                                @Html.ValidationMessageFor(model => model.IsDownloadable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group ml-5">
                            <div class="custom-control custom-checkbox">
                                @Html.EditorFor(model => model.IsPublic, new { htmlAttributes = new { @class = "custom-control-input" } })
                                @Html.LabelFor(model => model.IsPublic, htmlAttributes: new { @class = "custom-control-label" })
                                @Html.ValidationMessageFor(model => model.IsPublic, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="">
                                <label for="File" class="btn unfollow-btn mt-3 ml-4 mb-3" style="display: block;">
                                    Browse
                                </label>
                                <input type="file" id="File" name="File" value="File" />
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="">
                                <input type="submit" value="Upload" class="btn follow-btn float-right" />
                            </div>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function onChangeSuccess(data) {

            if (data.status === "success") {
                $("#modalcontent").modal('hide');
                $("#message-area").html(data.view);
            }
            $.each(data.formErrors, function () {
                $("[data-valmsg-for=" + this.key + "]").html(this.errors.join());
            });
        }
    </script>
}

