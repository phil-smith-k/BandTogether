@model IEnumerable<BandTogether.Models.ResourceModels.ResourceListItem>

@{
    ViewBag.Title = "NewsFeed";

}

<div class="d-flex flex-row justify-content-between">
    <h2 class="flex-fill">News Feed</h2>
    <input type="text" id="search-bar" class="flex-fill" placeholder="Search your feed...">

</div>
<hr />
@{Html.RenderPartial("AddResource"); }
<div class="card-columns mt-4">
    @foreach (var item in Model)
    {
        var base64 = Convert.ToBase64String(item.ImageData);
        var contentType = item.ContentType;
        var imgSrc = String.Format($"data:{contentType};base64,{base64}");

        <div class="card resource-card">
            <div class="card-body">
                <h6>@Html.ActionLink(@Html.DisplayFor(modelItem => item.Title).ToHtmlString(), "Detail", "Resource", new { id = item.ResourceId }, null)</h6>
                <hr />
                <p>@Html.DisplayFor(modelItem => item.DateCreated)</p>
                <p><span class="font-weight-bold">Description: </span><br />@Html.DisplayFor(modelItem => item.Description)</p>
            </div>
            <div class="card-footer">
                <div class="profile-pic-resource d-flex align-items-center">
                    <img src="@imgSrc" />
                    <h5 class="align-content-center ml-3">@Html.ActionLink(@Html.DisplayFor(modelItem => item.TeacherName).ToHtmlString(), "Detail", "Teacher", new { id = item.TeacherId }, null)</h5>
                    <hr />
                </div>
            </div>
        </div>
    }
</div>
<hr />
@section scripts{

    <script>
        const search = document.getElementById("search-bar");
        const cards = document.querySelectorAll(".card");
        search.addEventListener("keyup", function () {
            var searchText = search.value.toUpperCase();
            for (i = 0; i < cards.length; i++) {
                var elements = cards[i].children;
                for (j = 0; j < elements.length; j++) {
                    var currentElement = elements[j];
                    var text = currentElement.textContent.toUpperCase();
                    if (text.includes(searchText)) {
                        currentElement.parentElement.style.display = "";
                        break;
                    }
                    else {
                        currentElement.parentElement.style.display = "none";
                        continue;
                    }
                }
            }
        });
    </script>
}